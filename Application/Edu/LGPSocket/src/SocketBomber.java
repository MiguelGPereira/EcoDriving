import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.text.ParseException;
import java.util.ArrayList;

public class SocketBomber {
    
    public static void main(String[] args) throws ParseException, IOException {
        
        ArrayList<String> list = new ArrayList<String>();
        list.add("20150527-073146,15509,962546,1,0,5404,63965,0,17725,51,0,0,0,1,0,0,1,6637066,2522547,1,117,0,0,NORM,ACT,1,0");
        list.add("20150527-073147,15509,962546,1,0,5404,43,220,17721,51,0,0,0,1,0,0,1,6637066,2522547,1,117,0,0,NORM,ACT,1,0");
        list.add("20150527-073148,15509,962546,1,36,5404,528,2709,17737,63,0,0,0,1,0,0,1,6637066,2522547,1,117,0,0,NORM,ACT,1,0");
        list.add("20150527-073150,15509,962546,1,109,5404,818,4197,17736,78,0,0,0,1,0,0,1,6637066,2522547,0,117,0,0,NORM,INI_M,1,0");
        list.add("20150527-073151,15509,962546,1,217,5404,818,4195,17728,90,0,0,0,1,0,0,1,6637066,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073152,15509,962546,1,305,5404,752,3857,17734,99,0,0,0,1,0,0,1,6637066,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073154,15509,962546,1,402,5404,753,3865,17744,111,0,0,0,1,0,0,1,6637066,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073155,15509,962546,1,497,5404,668,3406,17760,114,0,0,0,1,0,0,1,6637066,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073156,15509,962546,1,571,5404,662,3394,17770,120,0,0,0,1,0,0,1,6637066,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073158,15509,962546,1,656,5404,662,3397,17751,129,0,0,0,1,0,0,1,6637066,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073159,15509,962546,1,741,5404,662,3397,17770,136,0,0,0,1,0,0,1,6637066,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073200,15509,962546,1,812,5405,640,3284,17755,142,0,0,0,1,0,0,1,6637066,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073201,15509,962546,1,893,5405,639,3088,17747,145,0,0,0,1,0,0,1,6637066,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073203,15509,962546,1,958,5405,572,2937,17730,142,0,0,0,1,0,0,1,6637066,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073204,15509,962546,1,1030,5405,573,2941,17725,148,0,0,0,1,0,0,1,6637066,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073205,15509,962546,1,1103,5406,595,3057,17721,157,0,0,0,1,0,0,1,6637066,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073207,15509,962546,1,1167,5406,665,3411,17715,172,0,0,0,1,0,0,1,6637066,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073208,15509,962546,1,1249,5406,665,3410,17689,179,0,0,0,1,0,0,1,6637066,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073209,15509,962546,1,1318,5407,707,3626,17692,193,0,0,0,1,0,0,1,6637066,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073211,15509,962546,1,1410,5407,962,5014,17703,237,0,0,0,1,0,0,1,6637066,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073212,15509,962546,1,1506,5408,973,4994,17694,279,0,0,0,1,0,0,1,6637066,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073213,15509,962546,1,1628,5408,975,5003,17691,298,0,0,0,1,0,0,1,6637066,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073215,15509,962546,1,1746,5409,973,4991,17695,314,0,0,0,1,0,0,1,6637066,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073216,15509,962546,1,1841,5409,35,181,17718,141,0,0,0,1,0,0,1,6637066,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073217,15509,962546,1,1844,5410,0,0,17712,55,0,0,0,1,0,0,1,6637066,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073219,15509,962546,1,1839,5410,0,2,17718,51,0,0,0,1,0,0,1,6637066,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073220,15509,962546,1,1830,5411,57,294,17719,80,0,0,0,1,0,0,1,6637066,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073221,15509,962546,1,1853,5411,335,1587,17722,138,0,0,0,1,0,0,1,6637066,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073223,15509,962546,1,1888,5412,128,658,17716,98,0,0,0,1,0,0,1,6637066,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073224,15509,962546,1,1902,5412,286,1468,17701,128,0,0,0,1,0,0,1,6637066,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073225,15509,962546,1,1920,5413,419,2165,17685,169,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073227,15509,962546,1,1970,5413,423,2169,17671,178,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073228,15509,962546,1,2013,5414,421,1098,17561,165,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073229,15509,962546,1,2022,5414,1,4,17679,57,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073231,15509,962546,1,2014,5415,0,0,17689,49,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073232,15509,962546,1,2006,5416,42,216,17666,58,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073233,15509,962546,1,1992,5416,0,0,17671,51,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073234,15509,962546,1,1981,5417,0,0,17673,30,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073236,15509,962546,1,1974,5417,0,0,17643,30,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073237,15509,962546,1,1977,5418,222,1119,17645,111,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073238,15509,962546,1,1991,5418,218,1127,17658,120,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073240,15509,962546,1,2008,5419,221,1136,17652,118,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073241,15509,962546,1,2029,5420,221,1128,17646,118,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073242,15509,962546,1,2053,5420,218,1133,17631,118,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073244,15509,962546,1,2071,5421,219,1125,17621,120,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073245,15509,962546,1,2100,5421,217,1129,17621,123,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073246,15509,962546,1,2118,5422,215,1124,17633,125,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073248,15509,962546,1,2119,5423,0,1,17628,63,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073249,15509,962546,1,2114,5423,0,0,17615,57,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073250,15509,962546,1,2114,5424,0,0,17597,57,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073252,15509,962546,1,2111,5424,0,0,17615,48,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073253,15509,962546,1,2109,5425,0,0,17590,42,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073254,15509,962546,1,2112,5426,0,0,17578,43,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073256,15509,962546,1,2128,5426,320,1697,17542,141,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073257,15509,962546,1,2159,5427,0,0,17545,71,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073258,15509,962546,1,2181,5428,253,1365,17525,117,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073300,15509,962546,1,2216,5428,412,2266,17506,183,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073301,15509,962546,1,2273,5429,398,2256,17465,191,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073302,15509,962546,1,2318,5429,0,0,17481,72,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073304,15509,962546,1,2323,5430,114,658,17539,72,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073305,15509,962546,1,2344,5431,115,668,17541,89,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073306,15509,962546,1,2364,5431,115,673,17548,90,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073308,15509,962546,1,2385,5432,450,2660,17517,172,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073309,15509,962546,1,2453,5433,881,5410,17524,355,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073310,15509,962546,1,2579,5434,1003,7398,17527,441,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073312,15509,962546,1,2698,5434,1098,7419,17539,488,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073313,15509,962546,1,2838,5435,1019,7166,17546,486,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073314,15509,962546,1,2938,5436,771,5683,17516,413,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073316,15509,962546,1,3041,5437,749,5695,17507,388,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073317,15509,962546,1,3139,5438,731,5678,17477,395,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073318,15509,962546,1,3214,5438,706,5672,17477,393,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073319,15509,962546,1,3310,5439,692,5637,17474,387,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073321,15509,962546,1,3378,5440,674,5674,17494,385,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073322,15509,962546,1,3462,5441,660,5663,17533,382,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073323,15509,962546,1,3536,5442,555,4888,17561,348,0,0,0,1,0,0,1,6637069,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073325,15509,962546,1,3601,5443,540,4841,17569,325,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073326,15509,962546,1,3647,5444,365,3316,17570,254,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073327,15509,962546,1,3695,5446,360,3309,17563,246,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073329,15509,962546,1,3725,5447,5,48,17551,143,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073330,15509,962546,1,3719,5448,7,68,17542,68,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073331,15509,962546,1,3715,5449,132,1215,17543,121,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073333,15509,962546,1,3719,5450,129,1303,17579,124,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073334,15509,962546,1,3727,5451,133,1228,17567,121,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073335,15509,962546,1,3738,5452,133,1234,17581,120,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073337,15509,962546,1,3733,5453,137,1236,17566,129,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073338,15509,962546,1,3746,5454,131,1220,17555,131,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073339,15509,962546,1,3750,5455,133,1235,17558,129,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073341,15509,962546,1,3761,5456,134,1183,17557,127,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073342,15509,962546,1,3765,5457,129,1206,17613,127,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073343,15509,962546,1,3767,5459,128,1196,17608,126,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073345,15509,962546,1,3764,5460,138,1114,17647,121,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073346,15509,962546,1,3769,5461,133,1247,17649,120,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073347,15509,962546,1,3760,5462,139,1295,17660,120,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073349,15509,962546,1,3748,5463,135,1218,17642,121,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073350,15509,962546,1,3733,5464,130,1204,17688,120,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073351,15509,962546,1,3710,5465,129,1192,17651,121,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073353,15509,962546,1,3683,5466,132,1860,17637,123,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073354,15509,962546,1,3677,5467,444,4054,17638,270,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073355,15509,962546,1,3672,5468,445,4068,17637,280,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073358,15509,962546,1,3699,5470,442,4052,17627,281,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073359,15509,962546,1,3692,5471,443,4088,17624,281,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073401,15509,962546,1,3690,5472,444,4073,17627,281,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073402,15509,962546,1,3686,5473,446,4037,17604,282,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073403,15509,962546,1,3694,5475,450,4048,17651,277,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073405,15509,962546,1,3704,5475,438,4028,17667,276,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073406,15509,962546,1,3704,5477,444,4105,17697,273,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073407,15509,962546,1,3713,5478,442,4078,17727,272,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073408,15509,962546,1,3725,5479,450,4041,17725,271,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073410,15509,962546,1,3731,5480,428,3958,17739,271,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073411,15509,962546,1,3739,5481,448,4048,17731,268,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073412,15509,962546,1,3743,5482,442,4110,17727,268,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073414,15509,962546,1,3753,5483,438,4083,17731,268,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073415,15509,962546,1,3753,5484,437,4077,17742,268,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073416,15509,962546,1,3763,5485,434,4057,17704,268,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073418,15509,962546,1,3765,5486,442,4091,17727,268,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073419,15509,962546,1,3772,5487,436,4085,17730,268,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073420,15509,962546,1,3769,5488,434,4065,17728,273,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073422,15509,962546,1,3774,5489,436,4090,17747,273,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073423,15509,962546,1,3777,5490,438,4108,17759,273,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        list.add("20150527-073424,15509,962546,1,3782,5492,430,4069,17743,270,0,0,0,1,0,0,1,6637074,2522547,0,117,0,0,NORM,PA_E,1,0");
        
        //int portNumber = Integer.parseInt(args[0]);
        int portNumber = 5000;

        while (true) {
            System.out.println("Starting!");
            try ( 
                ServerSocket serverSocket = new ServerSocket(portNumber);
                Socket clientSocket = serverSocket.accept();
                PrintWriter out = new PrintWriter(clientSocket.getOutputStream(), true);
                BufferedReader in = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
            ) {
                String outputLine;
                int listSize = list.size();
                boolean check = true;
                while(check) {
                    for (int i=0; i<listSize; i++) {
                        try { Thread.sleep(1000); } catch (InterruptedException ex) {}
                        out.println(list.get(i));
                        if (out.checkError()) {
                            System.out.println("ERROR writing data to socket !!!");
                            check = false;
                            break;
                        }
                    }
                }
            }
            System.out.println("Starting over!");
            if ("hello".equals("abc"))
                break;
        }
        System.out.println("ENDED");
        
        
        
        
        
        
        
        
        /*
        DataOutputStream os = null; // os: output stream
        BufferedReader is = null; // is: input stream
        Socket smtpSocket = null; // smtpClient: our client socket

        try {
            InetAddress thisIp = InetAddress.getByName("nomadtech.serveftp.com");
            System.out.println(thisIp.getHostAddress());
            smtpSocket = new Socket( thisIp, 5000);
            os = new DataOutputStream(smtpSocket.getOutputStream());
            is = new BufferedReader(new InputStreamReader(smtpSocket.getInputStream()));
        } catch (UnknownHostException e) {
            System.err.println("Don't know about host: hostname");
        } catch (IOException e) {
            System.err.println("Couldn't get I/O for the connection to: hostname");
        }
        
        if (smtpSocket != null && os != null && is != null) {
            try {
                // write to server
                os.writeBytes("R");
                String responseLine;
                while ((responseLine = is.readLine()) != null) {
                    System.out.println(responseLine);
                    //LogLine logLine = new LogLine(responseLine);
                    //logLine.print();
                }
                os.close();
                is.close();
                smtpSocket.close();   
            } catch (UnknownHostException e) {
                System.err.println("Trying to connect to unknown host: " + e);
            } catch (IOException e) {
                System.err.println("IOException:  " + e);
            }
        }*/
    } 
}
